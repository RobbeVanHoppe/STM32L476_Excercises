ARM GAS  /tmp/ccDLjM55.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_TIM_PeriodElapsedCallback
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	HAL_TIM_PeriodElapsedCallback:
  27              	.LVL0:
  28              	.LFB142:
  29              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "cmsis_os.h"
  22:Core/Src/main.c **** #include "dma.h"
  23:Core/Src/main.c **** #include "usart.h"
  24:Core/Src/main.c **** #include "gpio.h"
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/main.c **** #include <rcl/rcl.h>
  29:Core/Src/main.c **** #include <rcl/error_handling.h>
ARM GAS  /tmp/ccDLjM55.s 			page 2


  30:Core/Src/main.c **** #include <rclc/rclc.h>
  31:Core/Src/main.c **** #include <rclc/executor.h>
  32:Core/Src/main.c **** #include "uxr/client/transport.h"
  33:Core/Src/main.c **** #include "rmw_microxrcedds_c/config.h"
  34:Core/Src/main.c **** #include <rmw_microros/rmw_microros.h>
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** #include <std_msgs/msg/int32.h>
  37:Core/Src/main.c **** /* USER CODE END Includes */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PTD */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  45:Core/Src/main.c **** /* USER CODE BEGIN PD */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE END PD */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  50:Core/Src/main.c **** /* USER CODE BEGIN PM */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* USER CODE END PM */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* USER CODE BEGIN PV */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE END PV */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  61:Core/Src/main.c **** void SystemClock_Config(void);
  62:Core/Src/main.c **** void MX_FREERTOS_Init(void);
  63:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /* USER CODE END PFP */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  68:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /* USER CODE END 0 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /**
  73:Core/Src/main.c ****   * @brief  The application entry point.
  74:Core/Src/main.c ****   * @retval int
  75:Core/Src/main.c ****   */
  76:Core/Src/main.c **** int main(void)
  77:Core/Src/main.c **** {
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* USER CODE END 1 */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  86:Core/Src/main.c ****   HAL_Init();
ARM GAS  /tmp/ccDLjM55.s 			page 3


  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* USER CODE END Init */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* Configure the system clock */
  93:Core/Src/main.c ****   SystemClock_Config();
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* USER CODE END SysInit */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* Initialize all configured peripherals */
 100:Core/Src/main.c ****   MX_GPIO_Init();
 101:Core/Src/main.c ****   MX_DMA_Init();
 102:Core/Src/main.c ****   MX_USART3_UART_Init();
 103:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /* USER CODE END 2 */
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   /* Init scheduler */
 108:Core/Src/main.c ****   osKernelInitialize();
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* Call init function for freertos objects (in cmsis_os2.c) */
 111:Core/Src/main.c ****   MX_FREERTOS_Init();
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* Start scheduler */
 114:Core/Src/main.c ****   osKernelStart();
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   /* Infinite loop */
 119:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 120:Core/Src/main.c ****   while (1)
 121:Core/Src/main.c ****   {
 122:Core/Src/main.c ****     /* USER CODE END WHILE */
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 125:Core/Src/main.c ****   }
 126:Core/Src/main.c ****   /* USER CODE END 3 */
 127:Core/Src/main.c **** }
 128:Core/Src/main.c **** 
 129:Core/Src/main.c **** /**
 130:Core/Src/main.c ****   * @brief System Clock Configuration
 131:Core/Src/main.c ****   * @retval None
 132:Core/Src/main.c ****   */
 133:Core/Src/main.c **** void SystemClock_Config(void)
 134:Core/Src/main.c **** {
 135:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 136:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 137:Core/Src/main.c **** 
 138:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 139:Core/Src/main.c ****   */
 140:Core/Src/main.c ****   if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 141:Core/Src/main.c ****   {
 142:Core/Src/main.c ****     Error_Handler();
 143:Core/Src/main.c ****   }
ARM GAS  /tmp/ccDLjM55.s 			page 4


 144:Core/Src/main.c **** 
 145:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 146:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 147:Core/Src/main.c ****   */
 148:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 149:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 150:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 2;
 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 40;
 154:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 155:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 157:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 158:Core/Src/main.c ****   {
 159:Core/Src/main.c ****     Error_Handler();
 160:Core/Src/main.c ****   }
 161:Core/Src/main.c **** 
 162:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 163:Core/Src/main.c ****   */
 164:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 165:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 166:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 167:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 168:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 169:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 170:Core/Src/main.c **** 
 171:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 172:Core/Src/main.c ****   {
 173:Core/Src/main.c ****     Error_Handler();
 174:Core/Src/main.c ****   }
 175:Core/Src/main.c **** }
 176:Core/Src/main.c **** 
 177:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 178:Core/Src/main.c **** 
 179:Core/Src/main.c **** /* USER CODE END 4 */
 180:Core/Src/main.c **** 
 181:Core/Src/main.c **** /**
 182:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 183:Core/Src/main.c ****   * @note   This function is called  when TIM1 interrupt took place, inside
 184:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 185:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 186:Core/Src/main.c ****   * @param  htim : TIM handle
 187:Core/Src/main.c ****   * @retval None
 188:Core/Src/main.c ****   */
 189:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 190:Core/Src/main.c **** {
  30              		.loc 1 190 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 190 1 is_stmt 0 view .LVU1
  35 0000 08B5     		push	{r3, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 3, -8
  39              		.cfi_offset 14, -4
ARM GAS  /tmp/ccDLjM55.s 			page 5


 191:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 192:Core/Src/main.c **** 
 193:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 194:Core/Src/main.c ****   if (htim->Instance == TIM1) {
  40              		.loc 1 194 3 is_stmt 1 view .LVU2
  41              		.loc 1 194 11 is_stmt 0 view .LVU3
  42 0002 0268     		ldr	r2, [r0]
  43              		.loc 1 194 6 view .LVU4
  44 0004 034B     		ldr	r3, .L5
  45 0006 9A42     		cmp	r2, r3
  46 0008 00D0     		beq	.L4
  47              	.LVL1:
  48              	.L1:
 195:Core/Src/main.c ****     HAL_IncTick();
 196:Core/Src/main.c ****   }
 197:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 198:Core/Src/main.c **** 
 199:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 200:Core/Src/main.c **** }
  49              		.loc 1 200 1 view .LVU5
  50 000a 08BD     		pop	{r3, pc}
  51              	.LVL2:
  52              	.L4:
 195:Core/Src/main.c ****     HAL_IncTick();
  53              		.loc 1 195 5 is_stmt 1 view .LVU6
  54 000c FFF7FEFF 		bl	HAL_IncTick
  55              	.LVL3:
  56              		.loc 1 200 1 is_stmt 0 view .LVU7
  57 0010 FBE7     		b	.L1
  58              	.L6:
  59 0012 00BF     		.align	2
  60              	.L5:
  61 0014 002C0140 		.word	1073818624
  62              		.cfi_endproc
  63              	.LFE142:
  65              		.section	.text.Error_Handler,"ax",%progbits
  66              		.align	1
  67              		.global	Error_Handler
  68              		.syntax unified
  69              		.thumb
  70              		.thumb_func
  71              		.fpu fpv4-sp-d16
  73              	Error_Handler:
  74              	.LFB143:
 201:Core/Src/main.c **** 
 202:Core/Src/main.c **** /**
 203:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 204:Core/Src/main.c ****   * @retval None
 205:Core/Src/main.c ****   */
 206:Core/Src/main.c **** void Error_Handler(void)
 207:Core/Src/main.c **** {
  75              		.loc 1 207 1 is_stmt 1 view -0
  76              		.cfi_startproc
  77              		@ Volatile: function does not return.
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80              		@ link register save eliminated.
ARM GAS  /tmp/ccDLjM55.s 			page 6


 208:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 209:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 210:Core/Src/main.c ****   __disable_irq();
  81              		.loc 1 210 3 view .LVU9
  82              	.LBB4:
  83              	.LBI4:
  84              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
ARM GAS  /tmp/ccDLjM55.s 			page 7


  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
ARM GAS  /tmp/ccDLjM55.s 			page 8


 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccDLjM55.s 			page 9


 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  85              		.loc 2 207 27 view .LVU10
  86              	.LBB5:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  87              		.loc 2 209 3 view .LVU11
  88              		.syntax unified
  89              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  90 0000 72B6     		cpsid i
  91              	@ 0 "" 2
  92              		.thumb
  93              		.syntax unified
  94              	.L8:
  95              	.LBE5:
  96              	.LBE4:
ARM GAS  /tmp/ccDLjM55.s 			page 10


 211:Core/Src/main.c ****   while (1)
  97              		.loc 1 211 3 discriminator 1 view .LVU12
 212:Core/Src/main.c ****   {
 213:Core/Src/main.c ****   }
  98              		.loc 1 213 3 discriminator 1 view .LVU13
 211:Core/Src/main.c ****   while (1)
  99              		.loc 1 211 9 discriminator 1 view .LVU14
 100 0002 FEE7     		b	.L8
 101              		.cfi_endproc
 102              	.LFE143:
 104              		.section	.text.SystemClock_Config,"ax",%progbits
 105              		.align	1
 106              		.global	SystemClock_Config
 107              		.syntax unified
 108              		.thumb
 109              		.thumb_func
 110              		.fpu fpv4-sp-d16
 112              	SystemClock_Config:
 113              	.LFB141:
 134:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 114              		.loc 1 134 1 view -0
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 88
 117              		@ frame_needed = 0, uses_anonymous_args = 0
 118 0000 00B5     		push	{lr}
 119              	.LCFI1:
 120              		.cfi_def_cfa_offset 4
 121              		.cfi_offset 14, -4
 122 0002 97B0     		sub	sp, sp, #92
 123              	.LCFI2:
 124              		.cfi_def_cfa_offset 96
 135:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 125              		.loc 1 135 3 view .LVU16
 135:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 126              		.loc 1 135 22 is_stmt 0 view .LVU17
 127 0004 4422     		movs	r2, #68
 128 0006 0021     		movs	r1, #0
 129 0008 05A8     		add	r0, sp, #20
 130 000a FFF7FEFF 		bl	memset
 131              	.LVL4:
 136:Core/Src/main.c **** 
 132              		.loc 1 136 3 is_stmt 1 view .LVU18
 136:Core/Src/main.c **** 
 133              		.loc 1 136 22 is_stmt 0 view .LVU19
 134 000e 0023     		movs	r3, #0
 135 0010 0093     		str	r3, [sp]
 136 0012 0193     		str	r3, [sp, #4]
 137 0014 0293     		str	r3, [sp, #8]
 138 0016 0393     		str	r3, [sp, #12]
 139 0018 0493     		str	r3, [sp, #16]
 140:Core/Src/main.c ****   {
 140              		.loc 1 140 3 is_stmt 1 view .LVU20
 140:Core/Src/main.c ****   {
 141              		.loc 1 140 7 is_stmt 0 view .LVU21
 142 001a 4FF40070 		mov	r0, #512
 143 001e FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 144              	.LVL5:
ARM GAS  /tmp/ccDLjM55.s 			page 11


 140:Core/Src/main.c ****   {
 145              		.loc 1 140 6 view .LVU22
 146 0022 18BB     		cbnz	r0, .L14
 148:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 147              		.loc 1 148 3 is_stmt 1 view .LVU23
 148:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 148              		.loc 1 148 36 is_stmt 0 view .LVU24
 149 0024 0123     		movs	r3, #1
 150 0026 0593     		str	r3, [sp, #20]
 149:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 151              		.loc 1 149 3 is_stmt 1 view .LVU25
 149:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 152              		.loc 1 149 30 is_stmt 0 view .LVU26
 153 0028 4FF48033 		mov	r3, #65536
 154 002c 0693     		str	r3, [sp, #24]
 150:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 155              		.loc 1 150 3 is_stmt 1 view .LVU27
 150:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 156              		.loc 1 150 34 is_stmt 0 view .LVU28
 157 002e 0223     		movs	r3, #2
 158 0030 0F93     		str	r3, [sp, #60]
 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 2;
 159              		.loc 1 151 3 is_stmt 1 view .LVU29
 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 2;
 160              		.loc 1 151 35 is_stmt 0 view .LVU30
 161 0032 0322     		movs	r2, #3
 162 0034 1092     		str	r2, [sp, #64]
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 40;
 163              		.loc 1 152 3 is_stmt 1 view .LVU31
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 40;
 164              		.loc 1 152 30 is_stmt 0 view .LVU32
 165 0036 1193     		str	r3, [sp, #68]
 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 166              		.loc 1 153 3 is_stmt 1 view .LVU33
 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 167              		.loc 1 153 30 is_stmt 0 view .LVU34
 168 0038 2822     		movs	r2, #40
 169 003a 1292     		str	r2, [sp, #72]
 154:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 170              		.loc 1 154 3 is_stmt 1 view .LVU35
 154:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 171              		.loc 1 154 30 is_stmt 0 view .LVU36
 172 003c 0722     		movs	r2, #7
 173 003e 1392     		str	r2, [sp, #76]
 155:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 174              		.loc 1 155 3 is_stmt 1 view .LVU37
 155:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 175              		.loc 1 155 30 is_stmt 0 view .LVU38
 176 0040 1493     		str	r3, [sp, #80]
 156:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 177              		.loc 1 156 3 is_stmt 1 view .LVU39
 156:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 178              		.loc 1 156 30 is_stmt 0 view .LVU40
 179 0042 1593     		str	r3, [sp, #84]
 157:Core/Src/main.c ****   {
 180              		.loc 1 157 3 is_stmt 1 view .LVU41
 157:Core/Src/main.c ****   {
ARM GAS  /tmp/ccDLjM55.s 			page 12


 181              		.loc 1 157 7 is_stmt 0 view .LVU42
 182 0044 05A8     		add	r0, sp, #20
 183 0046 FFF7FEFF 		bl	HAL_RCC_OscConfig
 184              	.LVL6:
 157:Core/Src/main.c ****   {
 185              		.loc 1 157 6 view .LVU43
 186 004a 88B9     		cbnz	r0, .L15
 164:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 187              		.loc 1 164 3 is_stmt 1 view .LVU44
 164:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 188              		.loc 1 164 31 is_stmt 0 view .LVU45
 189 004c 0F23     		movs	r3, #15
 190 004e 0093     		str	r3, [sp]
 166:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 191              		.loc 1 166 3 is_stmt 1 view .LVU46
 166:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 192              		.loc 1 166 34 is_stmt 0 view .LVU47
 193 0050 0323     		movs	r3, #3
 194 0052 0193     		str	r3, [sp, #4]
 167:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 195              		.loc 1 167 3 is_stmt 1 view .LVU48
 167:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 196              		.loc 1 167 35 is_stmt 0 view .LVU49
 197 0054 0023     		movs	r3, #0
 198 0056 0293     		str	r3, [sp, #8]
 168:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 199              		.loc 1 168 3 is_stmt 1 view .LVU50
 168:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 200              		.loc 1 168 36 is_stmt 0 view .LVU51
 201 0058 0393     		str	r3, [sp, #12]
 169:Core/Src/main.c **** 
 202              		.loc 1 169 3 is_stmt 1 view .LVU52
 169:Core/Src/main.c **** 
 203              		.loc 1 169 36 is_stmt 0 view .LVU53
 204 005a 0493     		str	r3, [sp, #16]
 171:Core/Src/main.c ****   {
 205              		.loc 1 171 3 is_stmt 1 view .LVU54
 171:Core/Src/main.c ****   {
 206              		.loc 1 171 7 is_stmt 0 view .LVU55
 207 005c 0421     		movs	r1, #4
 208 005e 6846     		mov	r0, sp
 209 0060 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 210              	.LVL7:
 171:Core/Src/main.c ****   {
 211              		.loc 1 171 6 view .LVU56
 212 0064 30B9     		cbnz	r0, .L16
 175:Core/Src/main.c **** 
 213              		.loc 1 175 1 view .LVU57
 214 0066 17B0     		add	sp, sp, #92
 215              	.LCFI3:
 216              		.cfi_remember_state
 217              		.cfi_def_cfa_offset 4
 218              		@ sp needed
 219 0068 5DF804FB 		ldr	pc, [sp], #4
 220              	.L14:
 221              	.LCFI4:
 222              		.cfi_restore_state
ARM GAS  /tmp/ccDLjM55.s 			page 13


 142:Core/Src/main.c ****   }
 223              		.loc 1 142 5 is_stmt 1 view .LVU58
 224 006c FFF7FEFF 		bl	Error_Handler
 225              	.LVL8:
 226              	.L15:
 159:Core/Src/main.c ****   }
 227              		.loc 1 159 5 view .LVU59
 228 0070 FFF7FEFF 		bl	Error_Handler
 229              	.LVL9:
 230              	.L16:
 173:Core/Src/main.c ****   }
 231              		.loc 1 173 5 view .LVU60
 232 0074 FFF7FEFF 		bl	Error_Handler
 233              	.LVL10:
 234              		.cfi_endproc
 235              	.LFE141:
 237              		.section	.text.main,"ax",%progbits
 238              		.align	1
 239              		.global	main
 240              		.syntax unified
 241              		.thumb
 242              		.thumb_func
 243              		.fpu fpv4-sp-d16
 245              	main:
 246              	.LFB140:
  77:Core/Src/main.c **** 
 247              		.loc 1 77 1 view -0
 248              		.cfi_startproc
 249              		@ Volatile: function does not return.
 250              		@ args = 0, pretend = 0, frame = 0
 251              		@ frame_needed = 0, uses_anonymous_args = 0
 252 0000 08B5     		push	{r3, lr}
 253              	.LCFI5:
 254              		.cfi_def_cfa_offset 8
 255              		.cfi_offset 3, -8
 256              		.cfi_offset 14, -4
  86:Core/Src/main.c **** 
 257              		.loc 1 86 3 view .LVU62
 258 0002 FFF7FEFF 		bl	HAL_Init
 259              	.LVL11:
  93:Core/Src/main.c **** 
 260              		.loc 1 93 3 view .LVU63
 261 0006 FFF7FEFF 		bl	SystemClock_Config
 262              	.LVL12:
 100:Core/Src/main.c ****   MX_DMA_Init();
 263              		.loc 1 100 3 view .LVU64
 264 000a FFF7FEFF 		bl	MX_GPIO_Init
 265              	.LVL13:
 101:Core/Src/main.c ****   MX_USART3_UART_Init();
 266              		.loc 1 101 3 view .LVU65
 267 000e FFF7FEFF 		bl	MX_DMA_Init
 268              	.LVL14:
 102:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 269              		.loc 1 102 3 view .LVU66
 270 0012 FFF7FEFF 		bl	MX_USART3_UART_Init
 271              	.LVL15:
 108:Core/Src/main.c **** 
ARM GAS  /tmp/ccDLjM55.s 			page 14


 272              		.loc 1 108 3 view .LVU67
 273 0016 FFF7FEFF 		bl	osKernelInitialize
 274              	.LVL16:
 111:Core/Src/main.c **** 
 275              		.loc 1 111 3 view .LVU68
 276 001a FFF7FEFF 		bl	MX_FREERTOS_Init
 277              	.LVL17:
 114:Core/Src/main.c **** 
 278              		.loc 1 114 3 view .LVU69
 279 001e FFF7FEFF 		bl	osKernelStart
 280              	.LVL18:
 281              	.L18:
 120:Core/Src/main.c ****   {
 282              		.loc 1 120 3 discriminator 1 view .LVU70
 125:Core/Src/main.c ****   /* USER CODE END 3 */
 283              		.loc 1 125 3 discriminator 1 view .LVU71
 120:Core/Src/main.c ****   {
 284              		.loc 1 120 9 discriminator 1 view .LVU72
 285 0022 FEE7     		b	.L18
 286              		.cfi_endproc
 287              	.LFE140:
 289              		.text
 290              	.Letext0:
 291              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 292              		.file 4 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l476xx.h"
 293              		.file 5 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stddef.h"
 294              		.file 6 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 295              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 296              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 297              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim.h"
 298              		.file 10 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rmw/tim
 299              		.file 11 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rmw/typ
 300              		.file 12 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rmw/qos
 301              		.file 13 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcl_act
 302              		.file 14 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 303              		.file 15 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr_ex.h"
 304              		.file 16 "Core/Inc/gpio.h"
 305              		.file 17 "Core/Inc/dma.h"
 306              		.file 18 "Core/Inc/usart.h"
 307              		.file 19 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 308              		.file 20 "<built-in>"
ARM GAS  /tmp/ccDLjM55.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccDLjM55.s:18     .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccDLjM55.s:26     .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccDLjM55.s:61     .text.HAL_TIM_PeriodElapsedCallback:0000000000000014 $d
     /tmp/ccDLjM55.s:66     .text.Error_Handler:0000000000000000 $t
     /tmp/ccDLjM55.s:73     .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccDLjM55.s:105    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccDLjM55.s:112    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccDLjM55.s:238    .text.main:0000000000000000 $t
     /tmp/ccDLjM55.s:245    .text.main:0000000000000000 main

UNDEFINED SYMBOLS
HAL_IncTick
memset
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_USART3_UART_Init
osKernelInitialize
MX_FREERTOS_Init
osKernelStart

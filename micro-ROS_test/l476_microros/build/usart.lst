ARM GAS  /tmp/cchbX9L3.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"usart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_USART3_UART_Init,"ax",%progbits
  18              		.align	1
  19              		.global	MX_USART3_UART_Init
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	MX_USART3_UART_Init:
  27              	.LFB132:
  28              		.file 1 "Core/Src/usart.c"
   1:Core/Src/usart.c **** /* USER CODE BEGIN Header */
   2:Core/Src/usart.c **** /**
   3:Core/Src/usart.c ****   ******************************************************************************
   4:Core/Src/usart.c ****   * @file    usart.c
   5:Core/Src/usart.c ****   * @brief   This file provides code for the configuration
   6:Core/Src/usart.c ****   *          of the USART instances.
   7:Core/Src/usart.c ****   ******************************************************************************
   8:Core/Src/usart.c ****   * @attention
   9:Core/Src/usart.c ****   *
  10:Core/Src/usart.c ****   * Copyright (c) 2024 STMicroelectronics.
  11:Core/Src/usart.c ****   * All rights reserved.
  12:Core/Src/usart.c ****   *
  13:Core/Src/usart.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/usart.c ****   * in the root directory of this software component.
  15:Core/Src/usart.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/usart.c ****   *
  17:Core/Src/usart.c ****   ******************************************************************************
  18:Core/Src/usart.c ****   */
  19:Core/Src/usart.c **** /* USER CODE END Header */
  20:Core/Src/usart.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/usart.c **** #include "usart.h"
  22:Core/Src/usart.c **** 
  23:Core/Src/usart.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/usart.c **** 
  25:Core/Src/usart.c **** /* USER CODE END 0 */
  26:Core/Src/usart.c **** 
  27:Core/Src/usart.c **** UART_HandleTypeDef huart3;
  28:Core/Src/usart.c **** DMA_HandleTypeDef hdma_usart3_rx;
  29:Core/Src/usart.c **** DMA_HandleTypeDef hdma_usart3_tx;
  30:Core/Src/usart.c **** 
ARM GAS  /tmp/cchbX9L3.s 			page 2


  31:Core/Src/usart.c **** /* USART3 init function */
  32:Core/Src/usart.c **** 
  33:Core/Src/usart.c **** void MX_USART3_UART_Init(void)
  34:Core/Src/usart.c **** {
  29              		.loc 1 34 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 08B5     		push	{r3, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 3, -8
  37              		.cfi_offset 14, -4
  35:Core/Src/usart.c **** 
  36:Core/Src/usart.c ****   /* USER CODE BEGIN USART3_Init 0 */
  37:Core/Src/usart.c **** 
  38:Core/Src/usart.c ****   /* USER CODE END USART3_Init 0 */
  39:Core/Src/usart.c **** 
  40:Core/Src/usart.c ****   /* USER CODE BEGIN USART3_Init 1 */
  41:Core/Src/usart.c **** 
  42:Core/Src/usart.c ****   /* USER CODE END USART3_Init 1 */
  43:Core/Src/usart.c ****   huart3.Instance = USART3;
  38              		.loc 1 43 3 view .LVU1
  39              		.loc 1 43 19 is_stmt 0 view .LVU2
  40 0002 0B48     		ldr	r0, .L5
  41 0004 0B4B     		ldr	r3, .L5+4
  42 0006 0360     		str	r3, [r0]
  44:Core/Src/usart.c ****   huart3.Init.BaudRate = 115200;
  43              		.loc 1 44 3 is_stmt 1 view .LVU3
  44              		.loc 1 44 24 is_stmt 0 view .LVU4
  45 0008 4FF4E133 		mov	r3, #115200
  46 000c 4360     		str	r3, [r0, #4]
  45:Core/Src/usart.c ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
  47              		.loc 1 45 3 is_stmt 1 view .LVU5
  48              		.loc 1 45 26 is_stmt 0 view .LVU6
  49 000e 0023     		movs	r3, #0
  50 0010 8360     		str	r3, [r0, #8]
  46:Core/Src/usart.c ****   huart3.Init.StopBits = UART_STOPBITS_1;
  51              		.loc 1 46 3 is_stmt 1 view .LVU7
  52              		.loc 1 46 24 is_stmt 0 view .LVU8
  53 0012 C360     		str	r3, [r0, #12]
  47:Core/Src/usart.c ****   huart3.Init.Parity = UART_PARITY_NONE;
  54              		.loc 1 47 3 is_stmt 1 view .LVU9
  55              		.loc 1 47 22 is_stmt 0 view .LVU10
  56 0014 0361     		str	r3, [r0, #16]
  48:Core/Src/usart.c ****   huart3.Init.Mode = UART_MODE_TX_RX;
  57              		.loc 1 48 3 is_stmt 1 view .LVU11
  58              		.loc 1 48 20 is_stmt 0 view .LVU12
  59 0016 0C22     		movs	r2, #12
  60 0018 4261     		str	r2, [r0, #20]
  49:Core/Src/usart.c ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  61              		.loc 1 49 3 is_stmt 1 view .LVU13
  62              		.loc 1 49 25 is_stmt 0 view .LVU14
  63 001a 8361     		str	r3, [r0, #24]
  50:Core/Src/usart.c ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
  64              		.loc 1 50 3 is_stmt 1 view .LVU15
  65              		.loc 1 50 28 is_stmt 0 view .LVU16
ARM GAS  /tmp/cchbX9L3.s 			page 3


  66 001c C361     		str	r3, [r0, #28]
  51:Core/Src/usart.c ****   huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
  67              		.loc 1 51 3 is_stmt 1 view .LVU17
  68              		.loc 1 51 30 is_stmt 0 view .LVU18
  69 001e 0362     		str	r3, [r0, #32]
  52:Core/Src/usart.c ****   huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
  70              		.loc 1 52 3 is_stmt 1 view .LVU19
  71              		.loc 1 52 38 is_stmt 0 view .LVU20
  72 0020 4362     		str	r3, [r0, #36]
  53:Core/Src/usart.c ****   if (HAL_UART_Init(&huart3) != HAL_OK)
  73              		.loc 1 53 3 is_stmt 1 view .LVU21
  74              		.loc 1 53 7 is_stmt 0 view .LVU22
  75 0022 FFF7FEFF 		bl	HAL_UART_Init
  76              	.LVL0:
  77              		.loc 1 53 6 view .LVU23
  78 0026 00B9     		cbnz	r0, .L4
  79              	.L1:
  54:Core/Src/usart.c ****   {
  55:Core/Src/usart.c ****     Error_Handler();
  56:Core/Src/usart.c ****   }
  57:Core/Src/usart.c ****   /* USER CODE BEGIN USART3_Init 2 */
  58:Core/Src/usart.c **** 
  59:Core/Src/usart.c ****   /* USER CODE END USART3_Init 2 */
  60:Core/Src/usart.c **** 
  61:Core/Src/usart.c **** }
  80              		.loc 1 61 1 view .LVU24
  81 0028 08BD     		pop	{r3, pc}
  82              	.L4:
  55:Core/Src/usart.c ****   }
  83              		.loc 1 55 5 is_stmt 1 view .LVU25
  84 002a FFF7FEFF 		bl	Error_Handler
  85              	.LVL1:
  86              		.loc 1 61 1 is_stmt 0 view .LVU26
  87 002e FBE7     		b	.L1
  88              	.L6:
  89              		.align	2
  90              	.L5:
  91 0030 00000000 		.word	.LANCHOR0
  92 0034 00480040 		.word	1073760256
  93              		.cfi_endproc
  94              	.LFE132:
  96              		.section	.text.HAL_UART_MspInit,"ax",%progbits
  97              		.align	1
  98              		.global	HAL_UART_MspInit
  99              		.syntax unified
 100              		.thumb
 101              		.thumb_func
 102              		.fpu fpv4-sp-d16
 104              	HAL_UART_MspInit:
 105              	.LVL2:
 106              	.LFB133:
  62:Core/Src/usart.c **** 
  63:Core/Src/usart.c **** void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
  64:Core/Src/usart.c **** {
 107              		.loc 1 64 1 is_stmt 1 view -0
 108              		.cfi_startproc
 109              		@ args = 0, pretend = 0, frame = 168
ARM GAS  /tmp/cchbX9L3.s 			page 4


 110              		@ frame_needed = 0, uses_anonymous_args = 0
 111              		.loc 1 64 1 is_stmt 0 view .LVU28
 112 0000 70B5     		push	{r4, r5, r6, lr}
 113              	.LCFI1:
 114              		.cfi_def_cfa_offset 16
 115              		.cfi_offset 4, -16
 116              		.cfi_offset 5, -12
 117              		.cfi_offset 6, -8
 118              		.cfi_offset 14, -4
 119 0002 AAB0     		sub	sp, sp, #168
 120              	.LCFI2:
 121              		.cfi_def_cfa_offset 184
 122 0004 0446     		mov	r4, r0
  65:Core/Src/usart.c **** 
  66:Core/Src/usart.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 123              		.loc 1 66 3 is_stmt 1 view .LVU29
 124              		.loc 1 66 20 is_stmt 0 view .LVU30
 125 0006 0021     		movs	r1, #0
 126 0008 2591     		str	r1, [sp, #148]
 127 000a 2691     		str	r1, [sp, #152]
 128 000c 2791     		str	r1, [sp, #156]
 129 000e 2891     		str	r1, [sp, #160]
 130 0010 2991     		str	r1, [sp, #164]
  67:Core/Src/usart.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 131              		.loc 1 67 3 is_stmt 1 view .LVU31
 132              		.loc 1 67 28 is_stmt 0 view .LVU32
 133 0012 8822     		movs	r2, #136
 134 0014 03A8     		add	r0, sp, #12
 135              	.LVL3:
 136              		.loc 1 67 28 view .LVU33
 137 0016 FFF7FEFF 		bl	memset
 138              	.LVL4:
  68:Core/Src/usart.c ****   if(uartHandle->Instance==USART3)
 139              		.loc 1 68 3 is_stmt 1 view .LVU34
 140              		.loc 1 68 16 is_stmt 0 view .LVU35
 141 001a 2268     		ldr	r2, [r4]
 142              		.loc 1 68 5 view .LVU36
 143 001c 354B     		ldr	r3, .L17
 144 001e 9A42     		cmp	r2, r3
 145 0020 01D0     		beq	.L13
 146              	.L7:
  69:Core/Src/usart.c ****   {
  70:Core/Src/usart.c ****   /* USER CODE BEGIN USART3_MspInit 0 */
  71:Core/Src/usart.c **** 
  72:Core/Src/usart.c ****   /* USER CODE END USART3_MspInit 0 */
  73:Core/Src/usart.c **** 
  74:Core/Src/usart.c ****   /** Initializes the peripherals clock
  75:Core/Src/usart.c ****   */
  76:Core/Src/usart.c ****     PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART3;
  77:Core/Src/usart.c ****     PeriphClkInit.Usart3ClockSelection = RCC_USART3CLKSOURCE_PCLK1;
  78:Core/Src/usart.c ****     if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
  79:Core/Src/usart.c ****     {
  80:Core/Src/usart.c ****       Error_Handler();
  81:Core/Src/usart.c ****     }
  82:Core/Src/usart.c **** 
  83:Core/Src/usart.c ****     /* USART3 clock enable */
  84:Core/Src/usart.c ****     __HAL_RCC_USART3_CLK_ENABLE();
ARM GAS  /tmp/cchbX9L3.s 			page 5


  85:Core/Src/usart.c **** 
  86:Core/Src/usart.c ****     __HAL_RCC_GPIOC_CLK_ENABLE();
  87:Core/Src/usart.c ****     /**USART3 GPIO Configuration
  88:Core/Src/usart.c ****     PC4     ------> USART3_TX
  89:Core/Src/usart.c ****     PC5     ------> USART3_RX
  90:Core/Src/usart.c ****     */
  91:Core/Src/usart.c ****     GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_5;
  92:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  93:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
  94:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
  95:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
  96:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
  97:Core/Src/usart.c **** 
  98:Core/Src/usart.c ****     /* USART3 DMA Init */
  99:Core/Src/usart.c ****     /* USART3_RX Init */
 100:Core/Src/usart.c ****     hdma_usart3_rx.Instance = DMA1_Channel3;
 101:Core/Src/usart.c ****     hdma_usart3_rx.Init.Request = DMA_REQUEST_2;
 102:Core/Src/usart.c ****     hdma_usart3_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 103:Core/Src/usart.c ****     hdma_usart3_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 104:Core/Src/usart.c ****     hdma_usart3_rx.Init.MemInc = DMA_MINC_ENABLE;
 105:Core/Src/usart.c ****     hdma_usart3_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 106:Core/Src/usart.c ****     hdma_usart3_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 107:Core/Src/usart.c ****     hdma_usart3_rx.Init.Mode = DMA_CIRCULAR;
 108:Core/Src/usart.c ****     hdma_usart3_rx.Init.Priority = DMA_PRIORITY_VERY_HIGH;
 109:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart3_rx) != HAL_OK)
 110:Core/Src/usart.c ****     {
 111:Core/Src/usart.c ****       Error_Handler();
 112:Core/Src/usart.c ****     }
 113:Core/Src/usart.c **** 
 114:Core/Src/usart.c ****     __HAL_LINKDMA(uartHandle,hdmarx,hdma_usart3_rx);
 115:Core/Src/usart.c **** 
 116:Core/Src/usart.c ****     /* USART3_TX Init */
 117:Core/Src/usart.c ****     hdma_usart3_tx.Instance = DMA1_Channel2;
 118:Core/Src/usart.c ****     hdma_usart3_tx.Init.Request = DMA_REQUEST_2;
 119:Core/Src/usart.c ****     hdma_usart3_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 120:Core/Src/usart.c ****     hdma_usart3_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 121:Core/Src/usart.c ****     hdma_usart3_tx.Init.MemInc = DMA_MINC_ENABLE;
 122:Core/Src/usart.c ****     hdma_usart3_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 123:Core/Src/usart.c ****     hdma_usart3_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 124:Core/Src/usart.c ****     hdma_usart3_tx.Init.Mode = DMA_NORMAL;
 125:Core/Src/usart.c ****     hdma_usart3_tx.Init.Priority = DMA_PRIORITY_VERY_HIGH;
 126:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart3_tx) != HAL_OK)
 127:Core/Src/usart.c ****     {
 128:Core/Src/usart.c ****       Error_Handler();
 129:Core/Src/usart.c ****     }
 130:Core/Src/usart.c **** 
 131:Core/Src/usart.c ****     __HAL_LINKDMA(uartHandle,hdmatx,hdma_usart3_tx);
 132:Core/Src/usart.c **** 
 133:Core/Src/usart.c ****     /* USART3 interrupt Init */
 134:Core/Src/usart.c ****     HAL_NVIC_SetPriority(USART3_IRQn, 5, 0);
 135:Core/Src/usart.c ****     HAL_NVIC_EnableIRQ(USART3_IRQn);
 136:Core/Src/usart.c ****   /* USER CODE BEGIN USART3_MspInit 1 */
 137:Core/Src/usart.c **** 
 138:Core/Src/usart.c ****   /* USER CODE END USART3_MspInit 1 */
 139:Core/Src/usart.c ****   }
 140:Core/Src/usart.c **** }
 147              		.loc 1 140 1 view .LVU37
ARM GAS  /tmp/cchbX9L3.s 			page 6


 148 0022 2AB0     		add	sp, sp, #168
 149              	.LCFI3:
 150              		.cfi_remember_state
 151              		.cfi_def_cfa_offset 16
 152              		@ sp needed
 153 0024 70BD     		pop	{r4, r5, r6, pc}
 154              	.LVL5:
 155              	.L13:
 156              	.LCFI4:
 157              		.cfi_restore_state
  76:Core/Src/usart.c ****     PeriphClkInit.Usart3ClockSelection = RCC_USART3CLKSOURCE_PCLK1;
 158              		.loc 1 76 5 is_stmt 1 view .LVU38
  76:Core/Src/usart.c ****     PeriphClkInit.Usart3ClockSelection = RCC_USART3CLKSOURCE_PCLK1;
 159              		.loc 1 76 40 is_stmt 0 view .LVU39
 160 0026 0423     		movs	r3, #4
 161 0028 0393     		str	r3, [sp, #12]
  77:Core/Src/usart.c ****     if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 162              		.loc 1 77 5 is_stmt 1 view .LVU40
  78:Core/Src/usart.c ****     {
 163              		.loc 1 78 5 view .LVU41
  78:Core/Src/usart.c ****     {
 164              		.loc 1 78 9 is_stmt 0 view .LVU42
 165 002a 03A8     		add	r0, sp, #12
 166 002c FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 167              	.LVL6:
  78:Core/Src/usart.c ****     {
 168              		.loc 1 78 8 view .LVU43
 169 0030 0028     		cmp	r0, #0
 170 0032 55D1     		bne	.L14
 171              	.L9:
  84:Core/Src/usart.c **** 
 172              		.loc 1 84 5 is_stmt 1 view .LVU44
 173              	.LBB2:
  84:Core/Src/usart.c **** 
 174              		.loc 1 84 5 view .LVU45
  84:Core/Src/usart.c **** 
 175              		.loc 1 84 5 view .LVU46
 176 0034 304B     		ldr	r3, .L17+4
 177 0036 9A6D     		ldr	r2, [r3, #88]
 178 0038 42F48022 		orr	r2, r2, #262144
 179 003c 9A65     		str	r2, [r3, #88]
  84:Core/Src/usart.c **** 
 180              		.loc 1 84 5 view .LVU47
 181 003e 9A6D     		ldr	r2, [r3, #88]
 182 0040 02F48022 		and	r2, r2, #262144
 183 0044 0192     		str	r2, [sp, #4]
  84:Core/Src/usart.c **** 
 184              		.loc 1 84 5 view .LVU48
 185 0046 019A     		ldr	r2, [sp, #4]
 186              	.LBE2:
  84:Core/Src/usart.c **** 
 187              		.loc 1 84 5 view .LVU49
  86:Core/Src/usart.c ****     /**USART3 GPIO Configuration
 188              		.loc 1 86 5 view .LVU50
 189              	.LBB3:
  86:Core/Src/usart.c ****     /**USART3 GPIO Configuration
 190              		.loc 1 86 5 view .LVU51
ARM GAS  /tmp/cchbX9L3.s 			page 7


  86:Core/Src/usart.c ****     /**USART3 GPIO Configuration
 191              		.loc 1 86 5 view .LVU52
 192 0048 DA6C     		ldr	r2, [r3, #76]
 193 004a 42F00402 		orr	r2, r2, #4
 194 004e DA64     		str	r2, [r3, #76]
  86:Core/Src/usart.c ****     /**USART3 GPIO Configuration
 195              		.loc 1 86 5 view .LVU53
 196 0050 DB6C     		ldr	r3, [r3, #76]
 197 0052 03F00403 		and	r3, r3, #4
 198 0056 0293     		str	r3, [sp, #8]
  86:Core/Src/usart.c ****     /**USART3 GPIO Configuration
 199              		.loc 1 86 5 view .LVU54
 200 0058 029B     		ldr	r3, [sp, #8]
 201              	.LBE3:
  86:Core/Src/usart.c ****     /**USART3 GPIO Configuration
 202              		.loc 1 86 5 view .LVU55
  91:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 203              		.loc 1 91 5 view .LVU56
  91:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 204              		.loc 1 91 25 is_stmt 0 view .LVU57
 205 005a 3023     		movs	r3, #48
 206 005c 2593     		str	r3, [sp, #148]
  92:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 207              		.loc 1 92 5 is_stmt 1 view .LVU58
  92:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 208              		.loc 1 92 26 is_stmt 0 view .LVU59
 209 005e 0226     		movs	r6, #2
 210 0060 2696     		str	r6, [sp, #152]
  93:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 211              		.loc 1 93 5 is_stmt 1 view .LVU60
  93:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 212              		.loc 1 93 26 is_stmt 0 view .LVU61
 213 0062 0025     		movs	r5, #0
 214 0064 2795     		str	r5, [sp, #156]
  94:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
 215              		.loc 1 94 5 is_stmt 1 view .LVU62
  94:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
 216              		.loc 1 94 27 is_stmt 0 view .LVU63
 217 0066 0323     		movs	r3, #3
 218 0068 2893     		str	r3, [sp, #160]
  95:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 219              		.loc 1 95 5 is_stmt 1 view .LVU64
  95:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 220              		.loc 1 95 31 is_stmt 0 view .LVU65
 221 006a 0723     		movs	r3, #7
 222 006c 2993     		str	r3, [sp, #164]
  96:Core/Src/usart.c **** 
 223              		.loc 1 96 5 is_stmt 1 view .LVU66
 224 006e 25A9     		add	r1, sp, #148
 225 0070 2248     		ldr	r0, .L17+8
 226 0072 FFF7FEFF 		bl	HAL_GPIO_Init
 227              	.LVL7:
 100:Core/Src/usart.c ****     hdma_usart3_rx.Init.Request = DMA_REQUEST_2;
 228              		.loc 1 100 5 view .LVU67
 100:Core/Src/usart.c ****     hdma_usart3_rx.Init.Request = DMA_REQUEST_2;
 229              		.loc 1 100 29 is_stmt 0 view .LVU68
 230 0076 2248     		ldr	r0, .L17+12
ARM GAS  /tmp/cchbX9L3.s 			page 8


 231 0078 224B     		ldr	r3, .L17+16
 232 007a 0360     		str	r3, [r0]
 101:Core/Src/usart.c ****     hdma_usart3_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 233              		.loc 1 101 5 is_stmt 1 view .LVU69
 101:Core/Src/usart.c ****     hdma_usart3_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 234              		.loc 1 101 33 is_stmt 0 view .LVU70
 235 007c 4660     		str	r6, [r0, #4]
 102:Core/Src/usart.c ****     hdma_usart3_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 236              		.loc 1 102 5 is_stmt 1 view .LVU71
 102:Core/Src/usart.c ****     hdma_usart3_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 237              		.loc 1 102 35 is_stmt 0 view .LVU72
 238 007e 8560     		str	r5, [r0, #8]
 103:Core/Src/usart.c ****     hdma_usart3_rx.Init.MemInc = DMA_MINC_ENABLE;
 239              		.loc 1 103 5 is_stmt 1 view .LVU73
 103:Core/Src/usart.c ****     hdma_usart3_rx.Init.MemInc = DMA_MINC_ENABLE;
 240              		.loc 1 103 35 is_stmt 0 view .LVU74
 241 0080 C560     		str	r5, [r0, #12]
 104:Core/Src/usart.c ****     hdma_usart3_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 242              		.loc 1 104 5 is_stmt 1 view .LVU75
 104:Core/Src/usart.c ****     hdma_usart3_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 243              		.loc 1 104 32 is_stmt 0 view .LVU76
 244 0082 8023     		movs	r3, #128
 245 0084 0361     		str	r3, [r0, #16]
 105:Core/Src/usart.c ****     hdma_usart3_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 246              		.loc 1 105 5 is_stmt 1 view .LVU77
 105:Core/Src/usart.c ****     hdma_usart3_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 247              		.loc 1 105 45 is_stmt 0 view .LVU78
 248 0086 4561     		str	r5, [r0, #20]
 106:Core/Src/usart.c ****     hdma_usart3_rx.Init.Mode = DMA_CIRCULAR;
 249              		.loc 1 106 5 is_stmt 1 view .LVU79
 106:Core/Src/usart.c ****     hdma_usart3_rx.Init.Mode = DMA_CIRCULAR;
 250              		.loc 1 106 42 is_stmt 0 view .LVU80
 251 0088 8561     		str	r5, [r0, #24]
 107:Core/Src/usart.c ****     hdma_usart3_rx.Init.Priority = DMA_PRIORITY_VERY_HIGH;
 252              		.loc 1 107 5 is_stmt 1 view .LVU81
 107:Core/Src/usart.c ****     hdma_usart3_rx.Init.Priority = DMA_PRIORITY_VERY_HIGH;
 253              		.loc 1 107 30 is_stmt 0 view .LVU82
 254 008a 2023     		movs	r3, #32
 255 008c C361     		str	r3, [r0, #28]
 108:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart3_rx) != HAL_OK)
 256              		.loc 1 108 5 is_stmt 1 view .LVU83
 108:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart3_rx) != HAL_OK)
 257              		.loc 1 108 34 is_stmt 0 view .LVU84
 258 008e 4FF44053 		mov	r3, #12288
 259 0092 0362     		str	r3, [r0, #32]
 109:Core/Src/usart.c ****     {
 260              		.loc 1 109 5 is_stmt 1 view .LVU85
 109:Core/Src/usart.c ****     {
 261              		.loc 1 109 9 is_stmt 0 view .LVU86
 262 0094 FFF7FEFF 		bl	HAL_DMA_Init
 263              	.LVL8:
 109:Core/Src/usart.c ****     {
 264              		.loc 1 109 8 view .LVU87
 265 0098 28BB     		cbnz	r0, .L15
 266              	.L10:
 114:Core/Src/usart.c **** 
 267              		.loc 1 114 5 is_stmt 1 view .LVU88
ARM GAS  /tmp/cchbX9L3.s 			page 9


 114:Core/Src/usart.c **** 
 268              		.loc 1 114 5 view .LVU89
 269 009a 194B     		ldr	r3, .L17+12
 270 009c 6367     		str	r3, [r4, #116]
 114:Core/Src/usart.c **** 
 271              		.loc 1 114 5 view .LVU90
 272 009e 9C62     		str	r4, [r3, #40]
 114:Core/Src/usart.c **** 
 273              		.loc 1 114 5 view .LVU91
 117:Core/Src/usart.c ****     hdma_usart3_tx.Init.Request = DMA_REQUEST_2;
 274              		.loc 1 117 5 view .LVU92
 117:Core/Src/usart.c ****     hdma_usart3_tx.Init.Request = DMA_REQUEST_2;
 275              		.loc 1 117 29 is_stmt 0 view .LVU93
 276 00a0 1948     		ldr	r0, .L17+20
 277 00a2 1A4B     		ldr	r3, .L17+24
 278 00a4 0360     		str	r3, [r0]
 118:Core/Src/usart.c ****     hdma_usart3_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 279              		.loc 1 118 5 is_stmt 1 view .LVU94
 118:Core/Src/usart.c ****     hdma_usart3_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 280              		.loc 1 118 33 is_stmt 0 view .LVU95
 281 00a6 0223     		movs	r3, #2
 282 00a8 4360     		str	r3, [r0, #4]
 119:Core/Src/usart.c ****     hdma_usart3_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 283              		.loc 1 119 5 is_stmt 1 view .LVU96
 119:Core/Src/usart.c ****     hdma_usart3_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 284              		.loc 1 119 35 is_stmt 0 view .LVU97
 285 00aa 1023     		movs	r3, #16
 286 00ac 8360     		str	r3, [r0, #8]
 120:Core/Src/usart.c ****     hdma_usart3_tx.Init.MemInc = DMA_MINC_ENABLE;
 287              		.loc 1 120 5 is_stmt 1 view .LVU98
 120:Core/Src/usart.c ****     hdma_usart3_tx.Init.MemInc = DMA_MINC_ENABLE;
 288              		.loc 1 120 35 is_stmt 0 view .LVU99
 289 00ae 0023     		movs	r3, #0
 290 00b0 C360     		str	r3, [r0, #12]
 121:Core/Src/usart.c ****     hdma_usart3_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 291              		.loc 1 121 5 is_stmt 1 view .LVU100
 121:Core/Src/usart.c ****     hdma_usart3_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 292              		.loc 1 121 32 is_stmt 0 view .LVU101
 293 00b2 8022     		movs	r2, #128
 294 00b4 0261     		str	r2, [r0, #16]
 122:Core/Src/usart.c ****     hdma_usart3_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 295              		.loc 1 122 5 is_stmt 1 view .LVU102
 122:Core/Src/usart.c ****     hdma_usart3_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 296              		.loc 1 122 45 is_stmt 0 view .LVU103
 297 00b6 4361     		str	r3, [r0, #20]
 123:Core/Src/usart.c ****     hdma_usart3_tx.Init.Mode = DMA_NORMAL;
 298              		.loc 1 123 5 is_stmt 1 view .LVU104
 123:Core/Src/usart.c ****     hdma_usart3_tx.Init.Mode = DMA_NORMAL;
 299              		.loc 1 123 42 is_stmt 0 view .LVU105
 300 00b8 8361     		str	r3, [r0, #24]
 124:Core/Src/usart.c ****     hdma_usart3_tx.Init.Priority = DMA_PRIORITY_VERY_HIGH;
 301              		.loc 1 124 5 is_stmt 1 view .LVU106
 124:Core/Src/usart.c ****     hdma_usart3_tx.Init.Priority = DMA_PRIORITY_VERY_HIGH;
 302              		.loc 1 124 30 is_stmt 0 view .LVU107
 303 00ba C361     		str	r3, [r0, #28]
 125:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart3_tx) != HAL_OK)
 304              		.loc 1 125 5 is_stmt 1 view .LVU108
ARM GAS  /tmp/cchbX9L3.s 			page 10


 125:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart3_tx) != HAL_OK)
 305              		.loc 1 125 34 is_stmt 0 view .LVU109
 306 00bc 4FF44053 		mov	r3, #12288
 307 00c0 0362     		str	r3, [r0, #32]
 126:Core/Src/usart.c ****     {
 308              		.loc 1 126 5 is_stmt 1 view .LVU110
 126:Core/Src/usart.c ****     {
 309              		.loc 1 126 9 is_stmt 0 view .LVU111
 310 00c2 FFF7FEFF 		bl	HAL_DMA_Init
 311              	.LVL9:
 126:Core/Src/usart.c ****     {
 312              		.loc 1 126 8 view .LVU112
 313 00c6 88B9     		cbnz	r0, .L16
 314              	.L11:
 131:Core/Src/usart.c **** 
 315              		.loc 1 131 5 is_stmt 1 view .LVU113
 131:Core/Src/usart.c **** 
 316              		.loc 1 131 5 view .LVU114
 317 00c8 0F4B     		ldr	r3, .L17+20
 318 00ca 2367     		str	r3, [r4, #112]
 131:Core/Src/usart.c **** 
 319              		.loc 1 131 5 view .LVU115
 320 00cc 9C62     		str	r4, [r3, #40]
 131:Core/Src/usart.c **** 
 321              		.loc 1 131 5 view .LVU116
 134:Core/Src/usart.c ****     HAL_NVIC_EnableIRQ(USART3_IRQn);
 322              		.loc 1 134 5 view .LVU117
 323 00ce 0022     		movs	r2, #0
 324 00d0 0521     		movs	r1, #5
 325 00d2 2720     		movs	r0, #39
 326 00d4 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 327              	.LVL10:
 135:Core/Src/usart.c ****   /* USER CODE BEGIN USART3_MspInit 1 */
 328              		.loc 1 135 5 view .LVU118
 329 00d8 2720     		movs	r0, #39
 330 00da FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 331              	.LVL11:
 332              		.loc 1 140 1 is_stmt 0 view .LVU119
 333 00de A0E7     		b	.L7
 334              	.L14:
  80:Core/Src/usart.c ****     }
 335              		.loc 1 80 7 is_stmt 1 view .LVU120
 336 00e0 FFF7FEFF 		bl	Error_Handler
 337              	.LVL12:
 338 00e4 A6E7     		b	.L9
 339              	.L15:
 111:Core/Src/usart.c ****     }
 340              		.loc 1 111 7 view .LVU121
 341 00e6 FFF7FEFF 		bl	Error_Handler
 342              	.LVL13:
 343 00ea D6E7     		b	.L10
 344              	.L16:
 128:Core/Src/usart.c ****     }
 345              		.loc 1 128 7 view .LVU122
 346 00ec FFF7FEFF 		bl	Error_Handler
 347              	.LVL14:
 348 00f0 EAE7     		b	.L11
ARM GAS  /tmp/cchbX9L3.s 			page 11


 349              	.L18:
 350 00f2 00BF     		.align	2
 351              	.L17:
 352 00f4 00480040 		.word	1073760256
 353 00f8 00100240 		.word	1073876992
 354 00fc 00080048 		.word	1207961600
 355 0100 00000000 		.word	.LANCHOR1
 356 0104 30000240 		.word	1073872944
 357 0108 00000000 		.word	.LANCHOR2
 358 010c 1C000240 		.word	1073872924
 359              		.cfi_endproc
 360              	.LFE133:
 362              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 363              		.align	1
 364              		.global	HAL_UART_MspDeInit
 365              		.syntax unified
 366              		.thumb
 367              		.thumb_func
 368              		.fpu fpv4-sp-d16
 370              	HAL_UART_MspDeInit:
 371              	.LVL15:
 372              	.LFB134:
 141:Core/Src/usart.c **** 
 142:Core/Src/usart.c **** void HAL_UART_MspDeInit(UART_HandleTypeDef* uartHandle)
 143:Core/Src/usart.c **** {
 373              		.loc 1 143 1 view -0
 374              		.cfi_startproc
 375              		@ args = 0, pretend = 0, frame = 0
 376              		@ frame_needed = 0, uses_anonymous_args = 0
 144:Core/Src/usart.c **** 
 145:Core/Src/usart.c ****   if(uartHandle->Instance==USART3)
 377              		.loc 1 145 3 view .LVU124
 378              		.loc 1 145 16 is_stmt 0 view .LVU125
 379 0000 0268     		ldr	r2, [r0]
 380              		.loc 1 145 5 view .LVU126
 381 0002 0C4B     		ldr	r3, .L26
 382 0004 9A42     		cmp	r2, r3
 383 0006 00D0     		beq	.L25
 384 0008 7047     		bx	lr
 385              	.L25:
 143:Core/Src/usart.c **** 
 386              		.loc 1 143 1 view .LVU127
 387 000a 10B5     		push	{r4, lr}
 388              	.LCFI5:
 389              		.cfi_def_cfa_offset 8
 390              		.cfi_offset 4, -8
 391              		.cfi_offset 14, -4
 392 000c 0446     		mov	r4, r0
 146:Core/Src/usart.c ****   {
 147:Core/Src/usart.c ****   /* USER CODE BEGIN USART3_MspDeInit 0 */
 148:Core/Src/usart.c **** 
 149:Core/Src/usart.c ****   /* USER CODE END USART3_MspDeInit 0 */
 150:Core/Src/usart.c ****     /* Peripheral clock disable */
 151:Core/Src/usart.c ****     __HAL_RCC_USART3_CLK_DISABLE();
 393              		.loc 1 151 5 is_stmt 1 view .LVU128
 394 000e 0A4A     		ldr	r2, .L26+4
 395 0010 936D     		ldr	r3, [r2, #88]
ARM GAS  /tmp/cchbX9L3.s 			page 12


 396 0012 23F48023 		bic	r3, r3, #262144
 397 0016 9365     		str	r3, [r2, #88]
 152:Core/Src/usart.c **** 
 153:Core/Src/usart.c ****     /**USART3 GPIO Configuration
 154:Core/Src/usart.c ****     PC4     ------> USART3_TX
 155:Core/Src/usart.c ****     PC5     ------> USART3_RX
 156:Core/Src/usart.c ****     */
 157:Core/Src/usart.c ****     HAL_GPIO_DeInit(GPIOC, GPIO_PIN_4|GPIO_PIN_5);
 398              		.loc 1 157 5 view .LVU129
 399 0018 3021     		movs	r1, #48
 400 001a 0848     		ldr	r0, .L26+8
 401              	.LVL16:
 402              		.loc 1 157 5 is_stmt 0 view .LVU130
 403 001c FFF7FEFF 		bl	HAL_GPIO_DeInit
 404              	.LVL17:
 158:Core/Src/usart.c **** 
 159:Core/Src/usart.c ****     /* USART3 DMA DeInit */
 160:Core/Src/usart.c ****     HAL_DMA_DeInit(uartHandle->hdmarx);
 405              		.loc 1 160 5 is_stmt 1 view .LVU131
 406 0020 606F     		ldr	r0, [r4, #116]
 407 0022 FFF7FEFF 		bl	HAL_DMA_DeInit
 408              	.LVL18:
 161:Core/Src/usart.c ****     HAL_DMA_DeInit(uartHandle->hdmatx);
 409              		.loc 1 161 5 view .LVU132
 410 0026 206F     		ldr	r0, [r4, #112]
 411 0028 FFF7FEFF 		bl	HAL_DMA_DeInit
 412              	.LVL19:
 162:Core/Src/usart.c **** 
 163:Core/Src/usart.c ****     /* USART3 interrupt Deinit */
 164:Core/Src/usart.c ****     HAL_NVIC_DisableIRQ(USART3_IRQn);
 413              		.loc 1 164 5 view .LVU133
 414 002c 2720     		movs	r0, #39
 415 002e FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 416              	.LVL20:
 165:Core/Src/usart.c ****   /* USER CODE BEGIN USART3_MspDeInit 1 */
 166:Core/Src/usart.c **** 
 167:Core/Src/usart.c ****   /* USER CODE END USART3_MspDeInit 1 */
 168:Core/Src/usart.c ****   }
 169:Core/Src/usart.c **** }
 417              		.loc 1 169 1 is_stmt 0 view .LVU134
 418 0032 10BD     		pop	{r4, pc}
 419              	.LVL21:
 420              	.L27:
 421              		.loc 1 169 1 view .LVU135
 422              		.align	2
 423              	.L26:
 424 0034 00480040 		.word	1073760256
 425 0038 00100240 		.word	1073876992
 426 003c 00080048 		.word	1207961600
 427              		.cfi_endproc
 428              	.LFE134:
 430              		.global	hdma_usart3_tx
 431              		.global	hdma_usart3_rx
 432              		.global	huart3
 433              		.section	.bss.hdma_usart3_rx,"aw",%nobits
 434              		.align	2
 435              		.set	.LANCHOR1,. + 0
ARM GAS  /tmp/cchbX9L3.s 			page 13


 438              	hdma_usart3_rx:
 439 0000 00000000 		.space	72
 439      00000000 
 439      00000000 
 439      00000000 
 439      00000000 
 440              		.section	.bss.hdma_usart3_tx,"aw",%nobits
 441              		.align	2
 442              		.set	.LANCHOR2,. + 0
 445              	hdma_usart3_tx:
 446 0000 00000000 		.space	72
 446      00000000 
 446      00000000 
 446      00000000 
 446      00000000 
 447              		.section	.bss.huart3,"aw",%nobits
 448              		.align	2
 449              		.set	.LANCHOR0,. + 0
 452              	huart3:
 453 0000 00000000 		.space	136
 453      00000000 
 453      00000000 
 453      00000000 
 453      00000000 
 454              		.text
 455              	.Letext0:
 456              		.file 2 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 457              		.file 3 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l476xx.h"
 458              		.file 4 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 459              		.file 5 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc_ex.h"
 460              		.file 6 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 461              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 462              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 463              		.file 9 "Core/Inc/usart.h"
 464              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_cortex.h"
 465              		.file 11 "Core/Inc/main.h"
 466              		.file 12 "<built-in>"
ARM GAS  /tmp/cchbX9L3.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usart.c
     /tmp/cchbX9L3.s:18     .text.MX_USART3_UART_Init:0000000000000000 $t
     /tmp/cchbX9L3.s:26     .text.MX_USART3_UART_Init:0000000000000000 MX_USART3_UART_Init
     /tmp/cchbX9L3.s:91     .text.MX_USART3_UART_Init:0000000000000030 $d
     /tmp/cchbX9L3.s:97     .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/cchbX9L3.s:104    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/cchbX9L3.s:352    .text.HAL_UART_MspInit:00000000000000f4 $d
     /tmp/cchbX9L3.s:363    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/cchbX9L3.s:370    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/cchbX9L3.s:424    .text.HAL_UART_MspDeInit:0000000000000034 $d
     /tmp/cchbX9L3.s:445    .bss.hdma_usart3_tx:0000000000000000 hdma_usart3_tx
     /tmp/cchbX9L3.s:438    .bss.hdma_usart3_rx:0000000000000000 hdma_usart3_rx
     /tmp/cchbX9L3.s:452    .bss.huart3:0000000000000000 huart3
     /tmp/cchbX9L3.s:434    .bss.hdma_usart3_rx:0000000000000000 $d
     /tmp/cchbX9L3.s:441    .bss.hdma_usart3_tx:0000000000000000 $d
     /tmp/cchbX9L3.s:448    .bss.huart3:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_UART_Init
Error_Handler
memset
HAL_RCCEx_PeriphCLKConfig
HAL_GPIO_Init
HAL_DMA_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_DMA_DeInit
HAL_NVIC_DisableIRQ
